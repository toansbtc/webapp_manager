import React, { useEffect, useState } from 'react'
import Head from "next/head";
import Image from 'next/image'
import router, { useRouter } from 'next/router';
import { signOut } from 'firebase/auth';
import { auth } from './api/config/fireBase';
import Active from './views/commonPages/active';
import Home from './views/commonPages/home';
import Yourng from './views/yourngPages';
import { prisma_sql } from './api/DB/PostgreSQL';
import axios from 'axios';

const page = 'home' || 'active' || 'yourng'
export default function index() {
  const route = useRouter();
  const [user, setUser] = useState('Anonymous')
  const [link, setLink] = useState<typeof page>('home')
  const [opneImage, setOpenImage] = useState(false)
  const [currentImageURL, setCurrentImageURL] = useState('')
  const [image, setImage] = useState(['https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnixOANZkzqBvx11kY0RUPxmRlhOfSwdebNA&s', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnixOANZkzqBvx11kY0RUPxmRlhOfSwdebNA&s', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnixOANZkzqBvx11kY0RUPxmRlhOfSwdebNA&s', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnixOANZkzqBvx11kY0RUPxmRlhOfSwdebNA&s', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnixOANZkzqBvx11kY0RUPxmRlhOfSwdebNA&s', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnixOANZkzqBvx11kY0RUPxmRlhOfSwdebNA&s', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnixOANZkzqBvx11kY0RUPxmRlhOfSwdebNA&s', 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnixOANZkzqBvx11kY0RUPxmRlhOfSwdebNA&s',])
  const [video, setVideo] = useState(['https://www.youtube.com/watch?v=ep1_odv7PUY', 'https://www.youtube.com/watch?v=ep1_odv7PUY'])

  useEffect(() => {
    axios.post('/api/DB/PostgreSQL',)
  }, [])

  const showElement = (id) => {
    const element = document.getElementById(id)
    if (element.classList.contains('show')) {
      element.classList.remove('show');
    } else {
      element.classList.add('show');
    }
  }

  return (
    <>
      <Head>
        <title>Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Navbar */}
      {/* <nav className="navbar navbar-expand-lg navbar-dark bg-dark">
        <div className="container-fluid">
          <a className="navbar-brand" href="#">

            <span className='row text-center justify-content-between align-content-center'>
              <Image src={'/bg.jpg'} width={50} height={50} className='col' alt='logo' />
              <div className='col h-100 text-center '>MyWebsite</div>
            </span>
          </a>

          <div className="collapse navbar-collapse" id="navbarNav">
            <ul className="navbar-nav ms-auto">
              <li className="nav-item">
                <a className="nav-link active" aria-current="page" href="#">
                  Home
                </a>
              </li>
              <li className="nav-item">
                <a className="nav-link" href="#">
                  Features
                </a>
              </li>
              <li className="nav-item">
                <a className="nav-link" href="#">
                  Pricing
                </a>
              </li>
              <li className="nav-item">
                <a className="nav-link" href="#">
                  Contact
                </a>
              </li>
            </ul>
          </div>
        </div>
      </nav> */}


      <nav className="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
        <div className="navbar-brand" >
          <button className='mr-1 btn '
            onClick={() => route.push('/authen')}
          >


            <Image src={'/churchs.jpeg'} width={55} height={50} alt='Home icon' className='rounded-circle m-lg-0' />
            <span className='text-white' style={{ marginRight: 10 }}>Logo home</span>
          </button>
        </div>
        <button className="navbar-toggler" type="button"
          onClick={() => showElement('navbarCollapse')}
        >
          <span className="navbar-toggler-icon"></span>
        </button>
        <div className="navbar-collapse collapse " id="navbarCollapse" >
          <ul className="navbar-nav ms-auto me-auto">
            <li className="nav-item active">
              <a className="nav-link" onClick={() => setLink('home')}>Home</a>
            </li>
            <li className="nav-item">
              <a className="nav-link" onClick={() => setLink('active')}>Active</a>
            </li>
            <li className="nav-item">
              <a className="nav-link" onClick={() => setLink('yourng')}>Yourng</a>
            </li>
          </ul>
          {link === 'yourng' && (
            <div className="mr-auto justify-content-between" style={{ paddingRight: 10 }}>

              <div className="dropdown">
                <text className='text-white' style={{ fontSize: 18, fontFamily: 'cursive' }}>{user !== '' ? `${user}` : ''}</text>
                <button
                  className="btn bg-dark dropdown-toggle"
                  style={{ color: 'white' }}
                  type="button"
                  id="userDropdown"
                  data-bs-toggle="dropdown"
                  aria-expanded="false"
                  onClick={() =>
                    showElement('userLogin')}
                >
                </button>

                <ul className="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown" id="userLogin">
                  <li onClick={() => route.push('/views/yourngPages/authen', '/authen')}>
                    Login
                  </li>
                  <li onClick={() => {
                    signOut(auth);
                    sessionStorage.clear();
                    router.replace('/')
                  }}>
                    Logout
                  </li>
                </ul>
              </div>
            </div>
          )}
        </div>

      </nav>


      {/* Main Layout */}
      <div className="container-fluid mt-5 vh-100">
        {link === 'active' && (
          <Active />
        )}
        {link === 'home' && (
          <Home />
        )}
        {link === 'yourng' && (
          <Yourng />
        )}
      </div>

      {/* open view image full screen */}
      {opneImage && (
        <div
          className="modal show"
          style={{ display: 'block', backgroundColor: 'rgba(0,0,0,0.8)' }}
        >
          <div className="modal-dialog modal-dialog-centered">
            <div className="modal-content">
              <div className="modal-header">
                <button
                  type="button"
                  className="btn-close"
                  onClick={() => setOpenImage(false)}
                  aria-label="Close"
                ></button>
              </div>
              <div className="modal-body">
                <Image
                  unoptimized
                  src={currentImageURL}
                  width={200}
                  height={200}
                  alt="Popup image"
                  style={{ width: '100%', height: '100%', objectFit: 'contain' }}
                />
              </div>
            </div>
          </div>
        </div>
      )}
    </>
  )
}
